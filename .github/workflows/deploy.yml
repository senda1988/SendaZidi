name: Deployment

on: push

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/meinPrivateKey
          chmod 400 ~/.ssh/meinPrivateKey
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Install Docker on EC2 (if needed)
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ubuntu
            fi
          EOF

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Copy frontend to EC2
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "mkdir -p /home/ubuntu/frontend_build"
          scp -i ~/.ssh/meinPrivateKey -r frontend/build/* ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/frontend_build/
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} << 'EOF'
              sudo rm -rf /var/www/html/*
              sudo cp -r /home/ubuntu/frontend_build/* /var/www/html/
          EOF


      - name: Copy backend to EC2 and deploy with Docker
        run: |
          scp -i ~/.ssh/meinPrivateKey -r backend ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/backend/
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            cd /home/ubuntu/backend
            docker build -t backend-app .
            docker rm -f backend-container || true
            docker run -d --name backend-container -p 5000:5000 backend-app
          EOF
